sapply(1:9,function(x) x*1:9)
plot(1:100,1:100)
data <- read.table("data.txt", header=TRUE)
data <- read.table("C:\Users\user\Desktop\data.txt", header=TRUE)
data <- read.table("C:/Users/user/Desktop/data.txt", header=TRUE)
data <- read.table("C:/Users/user/Desktop/data.txt", header=TRUE)
View(data)
data
data
data
data <- read.table("C:/Users/user/Desktop/data.txt", header=TRUE)
data
View(data)
View(data)
data <- read.table("C:/Users/user/Desktop/data.txt", header=TRUE)
data <- read.table("C:/Users/user/Desktop/data.txt", header=FALSE)
install.packages("ggplot2")
library(ggplot2)
ggplot(data, aes(x=variable, y=value)) + geom_bar(stat="identity")
getwd()
library('ggplot2') # 視覺化
library('ggthemes') # 視覺化
install.packages("ggplot2")
install.packages("ggthemes")
library('scales') # 視覺化
library('dplyr') # 資料整理與轉換
install.packages("dplyr")
install.packages("dplyr")
library('dplyr') # 資料整理與轉換
library('dplyr') # 資料整理與轉換
library('dplyr') # 資料整理與轉換
install.packages("dplyr")
library('dplyr') # 資料整理與轉換
library('mice') # imputation
install.packages("mice")
library('mice') # imputation
library('randomForest') # 機器學習
install.packages("randomForest")
install.packages("randomForest")
library('randomForest') # 機器學習
#讀入資料集(路徑務必正確)
train <- read.csv('E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data/train.csv', stringsAsFactors = F)
test  <- read.csv('E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data/test.csv', stringsAsFactors = F)
View(data)
View(data)
remove(data)
str(train)
str(test)
full  <- bind_rows(train, test) # bind training & test data
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
full  <- bind_rows(train, test) # bind training & test data
str(full)
# Grab title from passenger names
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
# Show title counts by sex
table(full$Sex, full$Title)
#讀入資料集(路徑務必正確)
train <- read.csv('E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data/train.csv', stringsAsFactors = F)
test  <- read.csv('E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data/test.csv', stringsAsFactors = F)
#查詢資料基本資訊
str(train)
str(test)
#把兩筆資料合併成一個資料框
full  <- bind_rows(train, test) # bind training & test data
str(full)
# Grab title from passenger names
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
# Show title counts by sex
table(full$Sex, full$Title)
# Show title counts by sex
table(full$Sex, full$Title)
# Titles with very low cell counts to be combined to "rare" level
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
# Also reassign mlle, ms, and mme accordingly
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
# Show title counts by sex again
table(full$Sex, full$Title)
#把姓氏給擷取下來，並且新增一個新的欄位(Surname)
full$Surname <- sapply(full$Name, function(x) strsplit(x, split = '[,.]')[[1]][1])
# Create a family size variable including the passenger themselves
full$Fsize <- full$SibSp + full$Parch + 1
# Create a family variable
full$Family <- paste(full$Surname, full$Fsize, sep='_')
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +
labs(x = 'Family Size') +
theme_few()
(
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat='count', position='dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat='count', position='dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat='count', position='dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
install.packages("ggplot2")
library('ggplot2') # 視覺化
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat='count', position='dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +
labs(x = 'Family Size') +
theme_few()
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat='count', position='dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
# Create a family variable
full$Family <- paste(full$Surname, full$Fsize, sep='_')
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat='count', position='dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
library('ggthemes') # 視覺化
library('scales') # 視覺化
library('dplyr') # 資料整理與轉換
library('mice') # imputation
install.packages("ggplot2")
install.packages("ggplot2")
library('ggplot2') # 視覺化
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + geom_bar(stat='count', position='dodge') + scale_x_continuous(breaks=c(1:11)) + labs(x = 'Family Size') + theme_few()
updateR()
install.packages("installr")
library(installr)
updateR()
updateR()
updateR()
rm(list = ls())
library('ggplot2') # 視覺化
library('ggthemes') # 視覺化
library('scales') # 視覺化
library('dplyr') # 資料整理與轉換
library('mice') # imputation
library('randomForest') # 機器學習
library('magrittr')
library('scales')
#讀入資料集(路徑務必正確)
train <- read.csv('E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data/train.csv', stringsAsFactors = F)
test  <- read.csv('E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data/test.csv', stringsAsFactors = F)
#查詢資料基本資訊
str(train)
str(test)
#把兩筆資料合併成一個資料框
full  <- bind_rows(train, test) # bind training & test data
str(full)
# Grab title from passenger names
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
# Titles with very low cell counts to be combined to "rare" level
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
# Also reassign mlle, ms, and mme accordingly
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
# Show title counts by sex again
table(full$Sex, full$Title)
#把姓氏給擷取下來，並且新增一個新的欄位(Surname)
full$Surname <- sapply(full$Name, function(x) strsplit(x, split = '[,.]')[[1]][1])
# Create a family size variable including the passenger themselves
full$Fsize <- full$SibSp + full$Parch + 1
# Create a family variable
full$Family <- paste(full$Surname, full$Fsize, sep='_')
# Use ggplot2 to visualize the relationship between family size & survival
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +
labs(x = 'Family Size') +
theme_few()
# Discretize family size
full$FsizeD[full$Fsize == 1] <- 'singleton'
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
full$FsizeD[full$Fsize > 4] <- 'large'
# Show family size by survival using a mosaic plot
mosaicplot(table(full$FsizeD, full$Survived), main='Family Size by Survival', shade=TRUE)
#把客艙編號的字首也弄成一欄(舉例來說C28，代表的是船艙C的第28號，現在我們只想要前面的字首。)
full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
#查看資料型態
str(full)
#用 table 來看一下 Embarked 有幾種不同的資料
table(full$Embarked)
#會發現有兩個空白的值，接著我們來實際找出他們
filter(full,full$Embarked=="")
# Get rid of our missing passenger IDs
embark_fare <- full %>%
filter(PassengerId != 62 & PassengerId != 830)
# Use ggplot2 to visualize embarkment, passenger class, & median fare
ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept=80),
colour='red', linetype='dashed', lwd=2) +
scale_y_continuous(labels=dollar_format()) +
theme_few()
# Since their fare was $80 for 1st class, they most likely embarked from 'C'
full$Embarked[c(62, 830)] <- 'C'
#看 Fare 有沒有缺失值
filter(full,is.na(full$Fare))
#看1044筆資料的形式
full[1044, ]
#因為1044筆資料的Pclass=3，且Embarked=S，根據剛剛的圖形，比較安全的設置是把他的票價訂在Pclass=3，且Embarked=S的中位數。再畫一個圖形來確認我們的想法。
ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ],
aes(x = Fare)) +
geom_density(fill = '#99d6ff', alpha=0.4) +
geom_vline(aes(xintercept=median(Fare, na.rm=T)),
colour='red', linetype='dashed', lwd=1) +
scale_x_continuous(labels=dollar_format()) +
theme_few()
# Replace missing fare value with median fare for class/embarkment
full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
# Show number of missing Age values
sum(is.na(full$Age))
# Make variables factors into factors
factor_vars <- c('PassengerId','Pclass','Sex','Embarked',
'Title','Surname','Family','FsizeD')
full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
# Set a random seed
set.seed(129)
# Perform mice imputation, excluding certain less-than-useful variables:
mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Family','Surname','Survived')], method='rf')
# Save the complete output
mice_output <- complete(mice_mod)
# Plot age distributions
par(mfrow=c(1,2))
hist(full$Age, freq=F, main='Age: Original Data',
col='darkgreen', ylim=c(0,0.04))
hist(mice_output$Age, freq=F, main='Age: MICE Output',
col='lightgreen', ylim=c(0,0.04))
# Replace Age variable from the mice model.
full$Age <- mice_output$Age
# Show new number of missing Age values
sum(is.na(full$Age))
#查看資料型態
str(full)
# First we'll look at the relationship between age & survival
ggplot(full[1:891,], aes(Age, fill = factor(Survived))) +
geom_histogram() +
# I include Sex since we know (a priori) it's a significant predictor
facet_grid(.~Sex) +
theme_few()
# Create the column child, and indicate whether child or adult
full$Child[full$Age < 18] <- 'Child'
full$Child[full$Age >= 18] <- 'Adult'
# Show counts
table(full$Child, full$Survived)
# Adding Mother variable
full$Mother <- 'Not Mother'
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
# Show counts
table(full$Mother, full$Survived)
# Finish by factorizing our two new factor variables
full$Child  <- factor(full$Child)
full$Mother <- factor(full$Mother)
# Split the data back into a train set and a test set
train <- full[1:891,]
test <- full[892:1309,]
# Set a random seed
set.seed(754)
# Build the model (note: not all possible variables are used)
rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
# Show model error
plot(rf_model, ylim=c(0,0.36))
legend('topright', colnames(rf_model$err.rate), col=1:3, fill=1:3)
# Get importance
importance    <- importance(rf_model)
varImportance <- data.frame(Variables = row.names(importance),
Importance = round(importance[ ,'MeanDecreaseGini'],2))
# Create a rank variable based on importance
rankImportance <- varImportance %>%
mutate(Rank = paste0('#',dense_rank(desc(Importance))))
# Use ggplot2 to visualize the relative importance of variables
ggplot(rankImportance, aes(x = reorder(Variables, Importance),
y = Importance, fill = Importance)) +
geom_bar(stat='identity') +
geom_text(aes(x = Variables, y = 0.5, label = Rank),
hjust=0, vjust=0.55, size = 4, colour = 'red') +
labs(x = 'Variables') +
coord_flip() +
theme_few()
# Predict using the test set
prediction <- predict(rf_model, test)
# Save the solution to a dataframe with two columns: PassengerId and Survived (prediction)
solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction)
# Write the solution to file
write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)
##讀入資料集(路徑務必正確)
gender_submission <- read.csv('E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data/gender_submission.csv', stringsAsFactors = F)
solution$submission<-as.factor(gender_submission$Survived)
table(solution$Survived, solution$submission)
save.image("titanic_environment.RData")
rm(list = ls())
load("titanic_environment.RData")
rm(list = ls())
load("titanic_environment.RData")
setwd("E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/data")
load("titanic_environment.RData")
getwd()
setwd("E:/1112課程/決策支援與商業智慧/期末專題報告/titanic/R")
load("titanic_environment.RData")
